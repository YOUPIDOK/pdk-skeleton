security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        main:
#            lazy: true
#            logout:
#                path: app_logout
                # where to redirect after logout
                # target: app_any_route
#            switch_user: true
#            switch_user: { role: ROLE_SUPER_ADMIN }

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

        admin:
#            lazy: true
            pattern: /admin(.*)
            custom_authenticator: App\Security\AdminAuthenticator
            user_checker: App\Security\AdminChecker
            form_login:
                provider: app_user_provider
                login_path: admin_login
                use_forward: false
                check_path: admin_login
                failure_path: null
            entry_point: form_login
            logout:
                path: admin_logout
                target: admin_login

    access_control:
        # Admin config
        - { path: ^/admin/login$, role: PUBLIC_ACCESS }
        - { path: ^/admin/logout$, role: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
