<?php

namespace App\Controller\Admin\User;

use App\Security\Admin\Voter\User\UserAdminActionVoter;
use Doctrine\ORM\EntityManagerInterface;
use Sonata\AdminBundle\Controller\CRUDController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class UserAdminController extends CRUDController
{
    private EntityManagerInterface $em;

    public function __construct(EntityManagerInterface $em)
    {
        $this->em = $em;
    }

    public function addAdminRoleAction($id, Request $request): Response
    {
        $user = $this->admin->getSubject();

        $this->denyAccessUnlessGranted(UserAdminActionVoter::MANAGE_ROLES, $user);

        $user->addRole('ROLE_ADMIN');
        $this->em->flush();

        $this->addFlash('success', 'Les droits administrateur ont bien été ajoutés à ' .$user->getIdentity());

        return $this->redirect($request->headers->get('referer'));
    }

    public function removeAdminRoleAction($id, Request $request): Response
    {
        $user = $this->admin->getSubject();

        $this->denyAccessUnlessGranted(UserAdminActionVoter::MANAGE_ROLES, $user);

        $user->removeRole('ROLE_SUPER_ADMIN');
        $user->removeRole('ROLE_ADMIN');
        $this->em->flush();

        $this->addFlash('success', 'Les droits administrateur ont bien été retirés à ' .$user->getIdentity());

        return $this->redirect($request->headers->get('referer'));
    }

    public function addSuperAdminRoleAction($id, Request $request): Response
    {
        $user = $this->admin->getSubject();

        $this->denyAccessUnlessGranted(UserAdminActionVoter::MANAGE_ROLES, $user);

        $user->addRole('ROLE_ADMIN');
        $user->addRole('ROLE_SUPER_ADMIN');
        $this->em->flush();

        $this->addFlash('success', 'Les droits super administrateur ont bien été ajoutés à ' .$user->getIdentity());

        return $this->redirect($request->headers->get('referer'));
    }

    public function removeSuperAdminRoleAction($id, Request $request): Response
    {
        $user = $this->admin->getSubject();

        $this->denyAccessUnlessGranted(UserAdminActionVoter::MANAGE_ROLES, $user);

        $user->removeRole('ROLE_SUPER_ADMIN');
        $this->em->flush();

        $this->addFlash('success', 'Les droits super administrateur ont bien été retirés à ' .$user->getIdentity());

        return $this->redirect($request->headers->get('referer'));
    }

    public function editAction(Request $request): Response
    {
        $user = $this->admin->getSubject();
        $this->denyAccessUnlessGranted(UserAdminActionVoter::EDIT_USER, $user);

        return parent::editAction($request); // TODO: Change the autogenerated stub
    }

    public function deleteAction(Request $request): Response
    {
        $user = $this->admin->getSubject();

        $this->denyAccessUnlessGranted(UserAdminActionVoter::DELETE_USER, $user);
        return parent::deleteAction($request); // TODO: Change the autogenerated stub
    }
}